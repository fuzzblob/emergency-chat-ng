apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.greenrobot:greendao-gradle-plugin:3.3.0'
    }
}

// Function to load environment variables from .env file
def loadEnv() {
    def envFile = file('.env')
    def envVars = [:] // Map to hold environment variables

    if (envFile.exists()) {
        println "Loading environment variables from .env file"
        envFile.eachLine { line ->
            if (!line.startsWith('#') && line.contains('=')) {
                def (key, value) = line.split('=', 2)
                envVars[key.trim()] = value.trim()
            }
        }
    } else {
        println ".env file not found. Using GitHub Secrets."
        // check if keystore string exists to avoid possible null
        def keystorePath = System.getenv('KEYSTORE_PATH')
        if (keystorePath) {
            envVars['KEYSTORE_PATH'] = System.getenv("KEYSTORE_PATH")
        } else {
            throw new GradleException("KEYSTORE_PATH environment variable is not set. Please set it to the path of your keystore.")
        }
        envVars['STORE_PASSWORD'] = System.getenv("STORE_PASSWORD")
        envVars['KEY_ALIAS'] = System.getenv("KEY_ALIAS")
        envVars['KEY_PASSWORD'] = System.getenv("KEY_PASSWORD")
    }

    return envVars
}

android {
    // TODO: update gradle version
    compileSdkVersion 34

    defaultConfig {
        applicationId 'com.fuzzblob.emergencychatng'
        minSdkVersion defaultMinSdkVersion
        targetSdkVersion defaultTargetSdkVersion
        versionCode 7
        versionName '3.0.3'
    }
    signingConfigs {
        release {
            // Load environment variables
            def env = loadEnv()
            storeFile file(env['KEYSTORE_PATH'])
            storePassword env['STORE_PASSWORD']
            keyAlias env['KEY_ALIAS']
            keyPassword env['KEY_PASSWORD']
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            // TODO: possibly use proguard-android-optimize.txt
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    namespace 'com.fuzzblob.emergencychatng'
}

greendao {
    schemaVersion 1
}

dependencies {
    //implementation fileTree(dir: 'libs', include: ['*.jar'])
    // You must install or update the Support Repository through the SDK manager to use this dependency.
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'org.greenrobot:greendao:3.3.0'
    implementation 'com.android.support:support-v4:28.0.0'
    // test libraries
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
}

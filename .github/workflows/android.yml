name: Android CI

on:
  push:
    branches:
      - '**'  # This will trigger the workflow on any branch
  pull_request:
    branches:
      - '**'  # This will also trigger the workflow for pull requests on any branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '11' # Ensure this matches your compile options
        distribution: 'temurin'
        cache: gradle
    - name: Decode Keystore
      run: |
            TMP_KEYSTORE_FILE_PATH="${RUNNER_TEMP}/keystore"
            mkdir -p "${TMP_KEYSTORE_FILE_PATH}"
            echo $ENCODED_STRING | base64 -di > "${TMP_KEYSTORE_FILE_PATH}"/fuzzblob-android-signing-keys.jks
            echo "KEYSTORE_PATH=${TMP_KEYSTORE_FILE_PATH}/fuzzblob-android-signing-keys.jks"
            echo "KEYSTORE_PATH=${TMP_KEYSTORE_FILE_PATH}/fuzzblob-android-signing-keys.jks" >> $GITHUB_ENV
      env:
            ENCODED_STRING: ${{ secrets.KEYSTORE }}
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build Debug
      run: ./gradlew assembleDebug # Use assembleDebug or assembleRelease based on your needs
      env:
        # Reference your GitHub secrets
        STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
        KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
        KEYSTORE_PATH: ${{ env.KEYSTORE_PATH }}  # Use the exported path
#   - name: Run tests
#     run: ./gradlew test # Adjust this command if needed
    - name: Build Release
      run: ./gradlew assembleRelease # Optional: Add this if you want to build the release version
      env:
        # Reference your GitHub secrets
        STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
        KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
        KEYSTORE_PATH: ${{ env.KEYSTORE_PATH }}  # Use the exported path
